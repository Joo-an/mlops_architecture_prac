name: Deploy to EC2 via ECR

on:
  push:
    branches: [main]    # master/main 등 내 저장소 브랜치에 맞게

permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2


      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin 573578168547.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/final-mlops-test

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.ECR_REPOSITORY }} .
          docker tag ${{ secrets.ECR_REPOSITORY }}:latest 573578168547.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:latest

      - name: Push Docker image to ECR
        run: |
          docker push 573578168547.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:latest

      - name: Set up SSH key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" | base64 --decode > key.pem
          chmod 600 key.pem

      - name: Deploy on EC2 via SSH
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "
            cd /home/${{ secrets.EC2_USER }}/your_project_path && \
            git pull && \
            docker compose pull && \
            docker compose up -d
          "
